<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class EntityConfigurationHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['title'])) {
            $value = $data['title'];
            $return = (string) $value;
            $this->class->reflFields['title']->setValue($document, $return);
            $hydratedData['title'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['subtitle'])) {
            $value = $data['subtitle'];
            $return = (string) $value;
            $this->class->reflFields['subtitle']->setValue($document, $return);
            $hydratedData['subtitle'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['description'])) {
            $value = $data['description'];
            $return = (string) $value;
            $this->class->reflFields['description']->setValue($document, $return);
            $hydratedData['description'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['language'])) {
            $value = $data['language'];
            $return = (string) $value;
            $this->class->reflFields['language']->setValue($document, $return);
            $hydratedData['language'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['createdAt'])) {
            $value = $data['createdAt'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } elseif ($value instanceof \DateTime) { $return = $value; } else { $return = new \DateTime($value); }
            $this->class->reflFields['createdAt']->setValue($document, clone $return);
            $hydratedData['createdAt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updatedAt'])) {
            $value = $data['updatedAt'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } elseif ($value instanceof \DateTime) { $return = $value; } else { $return = new \DateTime($value); }
            $this->class->reflFields['updatedAt']->setValue($document, clone $return);
            $hydratedData['updatedAt'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['owner'])) {
            $reference = $data['owner'];
            if (isset($this->class->fieldMappings['owner']['simple']) && $this->class->fieldMappings['owner']['simple']) {
                $className = $this->class->fieldMappings['owner']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['owner'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['owner']->setValue($document, $return);
            $hydratedData['owner'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['meta'])) {
            $value = $data['meta'];
            $return = (string) $value;
            $this->class->reflFields['meta']->setValue($document, $return);
            $hydratedData['meta'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['twitterUsername'])) {
            $value = $data['twitterUsername'];
            $return = (string) $value;
            $this->class->reflFields['twitterUsername']->setValue($document, $return);
            $hydratedData['twitterUsername'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['facebookAppId'])) {
            $value = $data['facebookAppId'];
            $return = (string) $value;
            $this->class->reflFields['facebookAppId']->setValue($document, $return);
            $hydratedData['facebookAppId'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['contactEmail'])) {
            $value = $data['contactEmail'];
            $return = (string) $value;
            $this->class->reflFields['contactEmail']->setValue($document, $return);
            $hydratedData['contactEmail'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['googleSiteVerification'])) {
            $value = $data['googleSiteVerification'];
            $return = (string) $value;
            $this->class->reflFields['googleSiteVerification']->setValue($document, $return);
            $hydratedData['googleSiteVerification'] = $return;
        }
        return $hydratedData;
    }
}